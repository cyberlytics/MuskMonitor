services:
  # stock-database:
  #   image: mongo
  #   restart: always
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: root_password
  #   volumes:
  #   - "MongoDB_Data:/data/db"
  # Router for replica set.
  stock-database:
    image: mongo
    command: mongos --port 27017 --configdb rs-config-server/stock-db-config-server:27017 --bind_ip_all
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - ./muskmonitor-backend/mongodb_sharding_scripts:/scripts
      - Mongo_DB_Router_DB:/data/db
      - Mongo_DB_Router_Config:/data/configdb

  stock-db-config-server:
    image: mongo
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    volumes:
      - ./muskmonitor-backend/mongodb_sharding_scripts:/scripts
      - Mongo_DB_Config_Server_DB:/data/db
      - Mongo_DB_Config_Server_Config:/data/configdb
    restart: always
    links:
      - stock-db-shard01-a
      - stock-db-shard02-a
  
  # Replica set 1
  stock-db-shard01-a:
    image: mongo
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    volumes:
      - ./muskmonitor-backend/mongodb_sharding_scripts:/scripts
      - Mongo_DB_Shard_01_A_DB:/data/db
      - Mongo_DB_Shard_01_A_Config:/data/configdb
    restart: always
    links:
      - stock-db-shard01-b
      - stock-db-shard01-c

  stock-db-shard01-b:
    image: mongo
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    volumes:
      - ./muskmonitor-backend/mongodb_sharding_scripts:/scripts
      - Mongo_DB_Shard_01_B_DB:/data/db
      - Mongo_DB_Shard_01_B_Config:/data/configdb
    restart: always

  stock-db-shard01-c:
    image: mongo
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    volumes:
      - ./muskmonitor-backend/mongodb_sharding_scripts:/scripts
      - Mongo_DB_Shard_01_C_DB:/data/db
      - Mongo_DB_Shard_01_C_Config:/data/configdb
    restart: always

  # Replica set 2
  stock-db-shard02-a:
    image: mongo
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    volumes:
      - ./muskmonitor-backend/mongodb_sharding_scripts:/scripts
      - Mongo_DB_Shard_02_A_DB:/data/db
      - Mongo_DB_Shard_02_A_Config:/data/configdb
    restart: always
    links:
      - stock-db-shard02-b
      - stock-db-shard02-c

  stock-db-shard02-b:
    image: mongo
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    volumes:
      - ./muskmonitor-backend/mongodb_sharding_scripts:/scripts
      - Mongo_DB_Shard_02_B_DB:/data/db
      - Mongo_DB_Shard_02_B_Config:/data/configdb
    restart: always

  stock-db-shard02-c:
    image: mongo
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    volumes:
      - ./muskmonitor-backend/mongodb_sharding_scripts:/scripts
      - Mongo_DB_Shard_02_C_DB:/data/db
      - Mongo_DB_Shard_02_C_Config:/data/configdb
    restart: always

  vector-database:
    image: cr.weaviate.io/semitechnologies/weaviate
    command: "--host 0.0.0.0 --port '8080' --scheme http"
    # ports:
    # - "3579:8080" # HTTP
    # - "50051:50051" # gRPC
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate_data"
      DEFAULT_VECTORIZER_MODULE: "none"
      CLUSTER_HOSTNAME: "node1"
      LIMIT_RESOURCES: "true"
    volumes:
    - "Weaviate_Data:/var/lib/weaviate_data"

  flask-backend:
    build: ./muskmonitor-backend
    container_name: flask-backend
    volumes: 
     - ./muskmonitor-backend:/app
    ports:
     - "5000:5000"
    depends_on:
     - stock-database
     - vector-database
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1

  react-frontend:
    build: ./muskmonitor-frontend
    container_name: react-frontend
    ports:
      - "3001:80"  # Mapping external port 3001 to internal port 80

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "8080:80"
    depends_on:
      - flask-backend
      - react-frontend

  flask-tests:
    build: ./muskmonitor-backend
    command: pytest --maxfail=1 --disable-warnings
    depends_on:
      - stock-database
      - vector-database
      - flask-backend
    # volumes:
    # - "./muskmonitor-backend/test_app.py:/app/test_app.py"

  react-tests:
    build:
      context: ./muskmonitor-frontend
      target: build
    command: npm run test -- --run

volumes:
  Weaviate_Data:
  MongoDB_Data:
  # Router.
  Mongo_DB_Router_DB:
  Mongo_DB_Router_Config:
  # Config server.
  Mongo_DB_Config_Server_DB:
  Mongo_DB_Config_Server_Config:
  # Replica set 1.
  Mongo_DB_Shard_01_A_DB:
  Mongo_DB_Shard_01_A_Config:
  Mongo_DB_Shard_01_B_DB:
  Mongo_DB_Shard_01_B_Config:
  Mongo_DB_Shard_01_C_DB:
  Mongo_DB_Shard_01_C_Config:
  # Replica set 2.
  Mongo_DB_Shard_02_A_DB:
  Mongo_DB_Shard_02_A_Config:
  Mongo_DB_Shard_02_B_DB:
  Mongo_DB_Shard_02_B_Config:
  Mongo_DB_Shard_02_C_DB:
  Mongo_DB_Shard_02_C_Config: